name: ALX Test and Report Bugs

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-test.txt

      - name: Run tests
        run: |
          # Run tests for each project directory
          for dir in 0x*/; do
            if [ -d "$dir" ]; then
              echo "Testing $dir"
              cd "$dir"
              pytest --cov=. --cov-report=xml || true
              pycodestyle *.py || true
              cd ..
            fi
          done

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: |
            **/coverage.xml
            **/.coverage

      - name: Report test results
        if: failure()
        run: |
          # Get test failure details
          TEST_RESULTS=$(pytest --tb=short -v || true)
          STYLE_RESULTS=$(pycodestyle *.py || true)

          # Create bug report
          curl -X POST "http://localhost:3000/api/bugs" \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer ${{ secrets.BUG_SYSTEM_TOKEN }}" \
            -d '{
              "title": "ALX Test Failure in ${{ github.repository }}",
              "description": "Tests failed in commit ${{ github.sha }}\n\nTest Results:\n$TEST_RESULTS\n\nStyle Issues:\n$STYLE_RESULTS",
              "projectId": "ALX_HIGHER_LEVEL",
              "reporterId": "SYSTEM",
              "priority": "HIGH",
              "severity": "MAJOR",
              "status": "OPEN",
              "labels": ["automated-test", "alx"],
              "metadata": {
                "commit": "${{ github.sha }}",
                "branch": "${{ github.ref }}",
                "workflow": "${{ github.workflow }}",
                "run_id": "${{ github.run_id }}",
                "repo": "${{ github.repository }}"
              }
            }'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BUG_SYSTEM_TOKEN: ${{ secrets.BUG_SYSTEM_TOKEN }}
