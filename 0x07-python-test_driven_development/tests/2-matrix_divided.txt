The ``2-matrix_divided.txt`` module
===================================

using ``matrix_divided``
----------------------------

Importing function from module:
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Dividing by 3
>>> matrix_divided([[3, 5, 6], [4, 2, 5]], 3)
[[1.0, 1.67, 2.0], [1.33, 0.67, 1.67]]

Dividing by -1
>>> matrix_divided([[3, 5, 6], [4, 2, 5]], -1)
[[-3.0, -5.0, -6.0], [-4.0, -2.0, -5.0]]

Passing div == None
>>> matrix_divided([[3, 5, 6], [4, 2, 5]], None)
[[3, 5, 6], [4, 2, 5]]

Passing div a string
>>> matrix_divided([[3, 5, 6], [4, 2, 5]], "mike")
Traceback (most recent call last):
    ...
TypeError: div must be a number

>>> matrix_divided([[3, 5, 6], [4, 2]], 3)
Traceback (most recent call last):
    ...
TypeError: Each row of the matrix must have the same size

Dividing a matrix by a float number:
>>> matrix_divided([[10, 20, 30], [1.33, 3.74, 6.89], [-8, -9.71, 0]], 5.3)
[[1.89, 3.77, 5.66], [0.25, 0.71, 1.3], [-1.51, -1.83, 0.0]]

Passing empty matrix
>>> matrix_divided([], 10)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

Passing a tuple as an argument:
>>> matrix_divided((3, 6, 9), 3)
Traceback (most recent call last):
            ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

Dividing a matrix which its elements aren't integer/float numbers:
>>> matrix_divided([["Hello", "World"], ["Hello", "Holberton"]], 10)
Traceback (most recent call last):
 	    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

Passing a matrix which one of its elements is an empty list:
>>> matrix_divided([[2.1, 5.8], [], [10, -3]], 8)
Traceback (most recent call last):
            ...
TypeError: matrix must be a matrix (list of lists) of integers/floats